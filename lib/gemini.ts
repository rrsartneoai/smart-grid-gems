import { google } from "@ai-sdk/google"
import { generateText, streamText } from "ai"

const model = google("gemini-2.0-flash-exp")

export interface LegalQuery {
  question: string
  context?: string
  language: "pl" | "en"
}

export interface LegalResponse {
  answer: string
  sources?: string[]
  confidence: number
  disclaimer: string
}

export async function generateLegalResponse(query: LegalQuery): Promise<LegalResponse> {
  const systemPrompt =
    query.language === "pl"
      ? `Jesteś profesjonalnym asystentem prawnym AI dla kancelarii prawnych w Polsce. 
       Udzielaj precyzyjnych odpowiedzi na pytania prawne, zawsze podkreślając, że wymagają weryfikacji przez kwalifikowanego prawnika.
       Odpowiadaj w języku polskim, używając profesjonalnej terminologii prawnej.`
      : `You are a professional legal AI assistant for law firms. 
       Provide precise answers to legal questions, always emphasizing that they require verification by a qualified lawyer.
       Respond in English using professional legal terminology.`

  const { text } = await generateText({
    model,
    system: systemPrompt,
    prompt: query.question,
    maxTokens: 1000,
  })

  const disclaimer =
    query.language === "pl"
      ? "Ta odpowiedź została wygenerowana przez AI i wymaga weryfikacji przez kwalifikowanego prawnika przed wykorzystaniem w praktyce zawodowej."
      : "This response was generated by AI and requires verification by a qualified lawyer before use in professional practice."

  return {
    answer: text,
    confidence: 0.85,
    disclaimer,
    sources: ["Kodeks cywilny", "Ustawa o adwokaturze", "Kodeks postępowania cywilnego"],
  }
}

export function streamLegalResponse(query: LegalQuery) {
  const systemPrompt =
    query.language === "pl"
      ? `Jesteś profesjonalnym asystentem prawnym AI dla kancelarii prawnych w Polsce.`
      : `You are a professional legal AI assistant for law firms.`

  return streamText({
    model,
    system: systemPrompt,
    prompt: query.question,
    maxTokens: 1000,
  })
}
